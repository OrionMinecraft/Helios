buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version
        classpath group: 'gradle.plugin.net.minecrell', name: 'licenser', version: minecrell_licenser_version
        classpath group: "com.github.jengelman.gradle.plugins", name: "shadow", version: shadow_version
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'net.minecrell.licenser'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = pluginGroup
    version = pluginVersion

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            name = 'destroystokyo-repo'
            url = 'https://repo.destroystokyo.com/repository/maven-public/'
        }

        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }

        maven {
            name = 'mikroskeem-repo'
            url = 'https://repo.wut.ee/repository/mikroskeem-repo'
        }

        maven {
            name = 'spongepowered-repo'
            url = 'https://repo.spongepowered.org/maven'
        }
    }

    // Plugin resource processing
    processResources {
        from(sourceSets.main.resources.srcDirs) {
            filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                    version: pluginVersion,
                    description: description,
                    website: website
            ]
        }
    }

    // Licenser task
    license {
        header = rootProject.file('etc/HEADER')
        ignoreFailures = false
        include "**/*.java"
        include "**/*.kt"
    }
}

// Wrapper task
task wrapper(type: Wrapper) {
    gradleVersion = gradle_version
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradle_version-all.zip"
}
